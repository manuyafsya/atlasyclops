apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride }}
  labels:
    app.kubernetes.io/instance: {{ .Values.fullnameOverride }}     
    app.kubernetes.io/managed-by: {{ .Release.Service }}                                                                                                                                                                                                     â”‚
    app.kubernetes.io/name: {{ .Values.fullnameOverride }}    
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}    
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name .Chart.Version }}                                                                                                                                                                                                             
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.fullnameOverride }}
      app.kubernetes.io/instance: {{ .Values.fullnameOverride }}
  template:
    metadata:
      {{- with .Values.annotations.deployment }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Values.fullnameOverride }}
        app.kubernetes.io/instance: {{ .Values.fullnameOverride }}
    spec:
      {{- with .Values.hostAliases }}
      hostAliases:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.gracePeriodSeconds.enabled }}
      terminationGracePeriodSeconds: {{ .Values.gracePeriodSeconds.value }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.migrations.enabled (eq .Values.migrations.type "init-container") }}
      initContainers:
        - name: {{ .Values.fullnameOverride }}-migrations
          {{- with .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.secrets.configs.enabled .Values.secrets.creds.enabled .Values.secrets.additional.enabled }}
          envFrom:
          {{- if .Values.secrets.configs.enabled }}
            - secretRef:
                name: "{{ .Values.fullnameOverride }}-configs"
          {{- end }}
          {{- if .Values.secrets.creds.enabled }}
            - secretRef:
                name: "{{ .Values.fullnameOverride }}-creds"
          {{- end }}
          {{- if .Values.secrets.additional.enabled }}
          {{- range .Values.secrets.additional.name }}
            - secretRef:
                name: {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          command: ["/bin/sh", "-c"]
          args: 
            {{- range .Values.migrations.args }}
            - {{ . | quote }}
            {{- end}}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount:
        create: true
        name: "{{ .Values.fullnameOverride }}"
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.fullnameOverride }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.secrets.configs.enabled .Values.secrets.creds.enabled .Values.secrets.additional.enabled }}
          envFrom:
          {{- if .Values.secrets.configs.enabled }}
            - secretRef:
                name: "{{ .Values.fullnameOverride }}-configs"
          {{- end }}
          {{- if .Values.secrets.creds.enabled }}
            - secretRef:
                name: "{{ .Values.fullnameOverride }}-creds"
          {{- end }}
          {{- if .Values.secrets.additional.enabled }}
          {{- range .Values.secrets.additional.name }}
            - secretRef:
                name: {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.interceptor.enabled }}
          command: ["/bin/sh", "-c"]
          args: [{{ .Values.interceptor.args | quote }}]
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            {{- range .Values.service.configs }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          {{- if eq .Values.liveness.type "httpGet" }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            httpGet:
              path: {{ .Values.liveness.path }}
              port: {{ .Values.liveness.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            httpGet:
              path: {{ .Values.liveness.path }}
              port: {{ .Values.liveness.port }}
          {{- else if eq .Values.liveness.type "exec" }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            exec:
              command:
                - grpc_health_probe
                - -addr=:{{ .Values.liveness.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            exec:
              command:
                - grpc_health_probe
                - -addr=:{{ .Values.liveness.port }}
          {{- else if eq .Values.liveness.type "tcpSocket" }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            tcpSocket:
              port: {{ .Values.liveness.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            tcpSocket:
              port: {{ .Values.liveness.port }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}