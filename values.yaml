serviceAccount:
  create: true
nameOverride: atlas
fullnameOverride: atlas
gracePeriodSeconds:
  enabled: true
  value: 60
namespace: namespace-atlas
secrets:
  configs:
    enabled: false
    autorestart:
      enabled: false
    path: pathto/configs/atlas
  creds:
    enabled: false
    autorestart:
      enabled: false
    path: pathto/creds/atlas
volumes: 
  - name: service-account
    secret:
      secretName: atlas-sa
  - name: data
    persistentVolumeClaim:
      claimName: volumes-pvc
volumeMounts:
  - name: service-account
    mountPath: /mnt
  - name: data
    mountPath: /data
liveness:
  port: 8000
  type: tcpSocket
  path: /
  initialDelay: 30
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
service:
  type: ClusterIP
  configs:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
  headless: false
imagePullSecrets:
  - name: "gcr-json-key"
image:
  pullPolicy: "IfNotPresent"
  repository: "asia.gcr.io/manuyafsya/atlas/apps" # {"$imagepolicy": "flux-system:apps:name"}
  tag: "1.0.0" # {"$imagepolicy": "flux-system:aggregator:tag"}
interceptor:
  enabled: false
  args: "echo 'test-interceptor'"
migrations:
  enabled: false
  type: init-container
  args:
    - "echo 'Initializing Service...'"
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  averageUtilMem: 80
  averageUtilCpu: 80
replicaCount: 1
resources: 
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 300m
    memory: 192Mi
ingress:
  enabled: false
  configs:
    - ingressName: "internal"
      className: "internal-nginx"
      rules:
        - host: atlas.domain.tld
          http:
            paths:
              - path: /rc(?:\/|$)(.*)
                pathType: Prefix
                backend:
                  service:
                    name: rc-atlas
                    port:
                      number: 80
annotations:
  ingress:
    "nginx.ingress.kubernetes.io/proxy-body-size": "10M"
    "nginx.ingress.kubernetes.io/use-regex": "true"
    "nginx.org/client-max-body-size": "10M"
  preupgradejob:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
  vault:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
hostAliases:
  - ip: "8.8.8.8"
    hostnames:
    - "google.com"